#!/usr/bin/env ruby -wKU

require 'highline'
require 'fileutils'
require 'fvm/extend/pathname'
require 'fvm/extend/string'
require 'fvm/environment'
require 'fvm/version'

def shell
  @shell ||= HighLine.new
end

def here
  @here ||= Pathname.new( __FILE__ ).dirname
end

def home
  Fvm::Environment::FVM_HOME
end

def bins
  Fvm::Environment::BIN_HOME
end

def sdks
  Fvm::Environment::SDK_HOME
end

def task( message, &block )
  shell.say "<%= color '#{message}', BOLD %>"
  shell.say 'Done' if block_given? and block.call
end

# 
# 
# install tasks
# 
# 

# introduce yourself, it's only polite
shell.say "Installing fvm #{Fvm::VERSION}"

# if our fvm home doesn't exist, create it
unless home.exist?
  # create our home directory
  task "Creating #{home}" do
    Dir.mkdir home unless home.exist?
    true
  end
  # copy scripts to the home directory
  task "Copying install files" do
    FileUtils.cp_r here.join( '..', 'install', 'scripts' ), home.join( 'scripts' )
    true
  end
end

# if our bins directory doesn't exist, create it
unless bins.exist?
  task "Creating #{bins}" do
    Dir.mkdir bins
  end
end

# we want the bins directory to be writable
unless bins.writable?
  task "Making #{bins} writable" do
    # change permissions
    system "sudo", "chmod", "g+w", bins.to_bash
  end
end

# we want the bins directory to be group-owned
unless bins.grpowned?
  task "Making #{bins} group-owned" do
    # change group, admin users are in staff
    system "sudo", "chgrp", "staff", bins.to_bash
  end
end

task "Add the following to the end of your ~/.bash_profile (or similar bash init file):" do
  restart = home.join( 'scripts', 'fvm' ).to_bash
  shell.say <<-EOS.undent
  
    [[ -s "#{restart}" ]] && source "#{restart}"
    # This loads FVM into a shell session.
    
  EOS
  false
end